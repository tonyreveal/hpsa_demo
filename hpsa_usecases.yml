---
- name: Construct inventoryies and job / workflow templates for HPSA
  hosts: localhost
  gather_facts: true
  become: false
  pre_tasks:
    - name: Include vars to for getting token and loop over sites
      ansible.builtin.include_vars:
        dir: vars/
        extensions:
          - 'yml'
          - 'yaml'
          - 'json'

    - name: Get AAP token
      ansible.controller.token:
        controller_host: "{{ aaphost }}"
        controller_password: "{{ aappass }}"
        controller_username: "{{ aapuser }}"
        scope: 'write'
        validate_certs: true
      register: aaptoken
    
    - name: Create random number to ensure all inventories and templates are unique to the job.
      ansible.builtin.set_fact:
        unique_job_number: "{{ ansible_date_time['year'] }}_\
          {{ ansible_date_time['month'] }}_\
          {{ ansible_date_time['day'] }}_\
          {{ ansible_date_time['hour'] }}_\
          {{ ansible_date_time['minute'] }}_\
          {{ ansible_date_time['second'] }}"

  tasks:
    - name: Include role to generate inventories
      ansible.builtin.include_role:
        name: texasroadracing.inventories.construct_inventories

    - name: Create job templates
      block:
        - name: Create Job Templates to run against Constructed Inventories
          ansible.controller.job_template:
            controller_host: "{{ aaphost }}"
            controller_oauthtoken: "{{ aaptoken['ansible_facts']['controller_token']['token'] }}"
            allow_simultaneous: true
            ask_variables_on_launch: true
            credentials: 'RHEL User'
            inventory: "HPSA {{ site }} Constructed Inventory {{ unique_job_number }}"
            job_type: 'run'
            name: "HPSA Job Template for {{ site}} using Constructed Inventory {{ unique_job_number }}"
            organization: 'Texas Roadracing'
            project: 'HPSA Demo'
            playbook: 'run_cmd.yml'
          loop: "{{ locations }}"
          loop_control:
            loop_var: site

    - name: Create workflow templates
      block:
        - name: Create execution Workflow for Constructed Inventories
          ansible.controller.workflow_job_template:
            controller_host: "{{ aaphost }}"
            controller_oauthtoken: "{{ aaptoken['ansible_facts']['controller_token']['token'] }}"
            allow_simultaneous: true
            ask_variables_on_launch: true
            name: 'HPSA Workflow for Constructed Inventories {{ unique_job_number }}'
            organization: 'Texas Roadracing'
            workflow_nodes:
              - extra_data:
                  run_cmd: 'df -h'
                identifier: "{{ site }}_001"
                inventory: "HPSA {{ site }} Constructed Inventory {{ unique_job_number }}"
                related:
                  always_nodes: []
                  failure_nodes: []
                  success_nodes: []
                unified_job_template:
                  name: "HPSA Job Template for {{ site}} using Constructed Inventory {{ unique_job_number }}"
                  organization:
                    name: 'Texas Roadracing'
                  type: 'job_template'
          loop: "{{ locations }}"
          loop_control:
            loop_var: site

    - name: Launch workflows
      block:
        - name: Launch job in AAP against Constructed Inventories using remote instance groups
          ansible.controller.workflow_launch:
            controller_host: "{{ aaphost }}"
            controller_oauthtoken: "{{ aaptoken['ansible_facts']['controller_token']['token'] }}"
            extra_vars:
              run_cmd: 'df -h'
            wait: false
            workflow_template: 'HPSA Workflow for Constructed Inventories {{ unique_job_number }}'

    # Can't delete while resource is in use.
    # Unique job ID makes this difficult to run as a separate playbook.
    # Need to check the status of the workflow with a retry and delay.
    # When workflow is finished, then run cleanup 
    # - name: Inlcude cleanup tasks
    #   ansible.builtin.include_tasks: cleanup.yml
...
